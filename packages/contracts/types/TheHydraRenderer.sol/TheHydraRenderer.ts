/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../common";

export interface TheHydraRendererInterface extends utils.Interface {
  functions: {
    "dataStore()": FunctionFragment;
    "getOnChainSVG(uint256)": FunctionFragment;
    "getOnChainSVG_AsBase64(uint256)": FunctionFragment;
    "renderSVG(bytes)": FunctionFragment;
    "renderSVG_AsString(bytes)": FunctionFragment;
    "theHydra()": FunctionFragment;
    "tokenURI(uint256,string)": FunctionFragment;
    "tokenURI(uint256)": FunctionFragment;
    "xqstgfx()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "dataStore"
      | "getOnChainSVG"
      | "getOnChainSVG_AsBase64"
      | "renderSVG"
      | "renderSVG_AsString"
      | "theHydra"
      | "tokenURI(uint256,string)"
      | "tokenURI(uint256)"
      | "xqstgfx"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "dataStore", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getOnChainSVG",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getOnChainSVG_AsBase64",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "renderSVG",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "renderSVG_AsString",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(functionFragment: "theHydra", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "tokenURI(uint256,string)",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenURI(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(functionFragment: "xqstgfx", values?: undefined): string;

  decodeFunctionResult(functionFragment: "dataStore", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getOnChainSVG",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOnChainSVG_AsBase64",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "renderSVG", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renderSVG_AsString",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "theHydra", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "tokenURI(uint256,string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tokenURI(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "xqstgfx", data: BytesLike): Result;

  events: {};
}

export interface TheHydraRenderer extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: TheHydraRendererInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    dataStore(overrides?: CallOverrides): Promise<[string]>;

    getOnChainSVG(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getOnChainSVG_AsBase64(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    renderSVG(
      _data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    renderSVG_AsString(
      _data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    theHydra(overrides?: CallOverrides): Promise<[string]>;

    "tokenURI(uint256,string)"(
      _id: PromiseOrValue<BigNumberish>,
      _renderType: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "tokenURI(uint256)"(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    xqstgfx(overrides?: CallOverrides): Promise<[string]>;
  };

  dataStore(overrides?: CallOverrides): Promise<string>;

  getOnChainSVG(
    _id: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  getOnChainSVG_AsBase64(
    _id: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  renderSVG(
    _data: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<string>;

  renderSVG_AsString(
    _data: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<string>;

  theHydra(overrides?: CallOverrides): Promise<string>;

  "tokenURI(uint256,string)"(
    _id: PromiseOrValue<BigNumberish>,
    _renderType: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  "tokenURI(uint256)"(
    _id: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  xqstgfx(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    dataStore(overrides?: CallOverrides): Promise<string>;

    getOnChainSVG(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    getOnChainSVG_AsBase64(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    renderSVG(
      _data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    renderSVG_AsString(
      _data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    theHydra(overrides?: CallOverrides): Promise<string>;

    "tokenURI(uint256,string)"(
      _id: PromiseOrValue<BigNumberish>,
      _renderType: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    "tokenURI(uint256)"(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    xqstgfx(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    dataStore(overrides?: CallOverrides): Promise<BigNumber>;

    getOnChainSVG(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOnChainSVG_AsBase64(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    renderSVG(
      _data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    renderSVG_AsString(
      _data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    theHydra(overrides?: CallOverrides): Promise<BigNumber>;

    "tokenURI(uint256,string)"(
      _id: PromiseOrValue<BigNumberish>,
      _renderType: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenURI(uint256)"(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    xqstgfx(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    dataStore(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getOnChainSVG(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOnChainSVG_AsBase64(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    renderSVG(
      _data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    renderSVG_AsString(
      _data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    theHydra(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "tokenURI(uint256,string)"(
      _id: PromiseOrValue<BigNumberish>,
      _renderType: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenURI(uint256)"(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    xqstgfx(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
