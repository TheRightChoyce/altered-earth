/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { TheHydra, TheHydraInterface } from "../TheHydra";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BeyondTheScopeOfConsciousness",
    type: "error",
  },
  {
    inputs: [],
    name: "CouldNotAlterReality",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDreamState",
    type: "error",
  },
  {
    inputs: [],
    name: "PayeeNotInDreamState",
    type: "error",
  },
  {
    inputs: [],
    name: "RealityAlreadyAltered",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "RealityAltered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "alterReality",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "returnToReality",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setRoyaltyInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdrawPayments",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001acc38038062001acc833981016040819052620000349162000227565b60405180606001604052806023815260200162001aa96023913960408051808201825260078152661053151154915160ca1b6020820152600080546001600160a01b0319166001600160a01b03871690811782559251919286929091907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3508151620000cc9060019060208501906200016b565b508051620000e29060029060208401906200016b565b50508151620000fa9150600a9060208401906200016b565b5050604080518082019091527318836acedef35d4a6c00aae46a36fade12ee5ff781526103e860209091015250600b80546001600160b81b0319167503e818836acedef35d4a6c00aae46a36fade12ee5ff717905560326007556706f05b59d3b20000600955603160085562000363565b828054620001799062000327565b90600052602060002090601f0160209004810192826200019d5760008555620001e8565b82601f10620001b857805160ff1916838001178555620001e8565b82800160010185558215620001e8579182015b82811115620001e8578251825591602001919060010190620001cb565b50620001f6929150620001fa565b5090565b5b80821115620001f65760008155600101620001fb565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200023b57600080fd5b82516001600160a01b03811681146200025357600080fd5b602084810151919350906001600160401b03808211156200027357600080fd5b818601915086601f8301126200028857600080fd5b8151818111156200029d576200029d62000211565b604051601f8201601f19908116603f01168101908382118183101715620002c857620002c862000211565b816040528281528986848701011115620002e157600080fd5b600093505b82841015620003055784840186015181850187015292850192620002e6565b82841115620003175760008684830101525b8096505050505050509250929050565b600181811c908216806200033c57607f821691505b6020821081036200035d57634e487b7160e01b600052602260045260246000fd5b50919050565b61173680620003736000396000f3fe6080604052600436106101405760003560e01c806342842e0e116100b657806395d89b411161006f57806395d89b41146103ad578063a22cb465146103c2578063b88d4fde146103e2578063c87b56dd14610402578063e2e784d514610422578063e985e9c51461044257600080fd5b806342842e0e146103025780636352211e146103225780636817c76c146103425780636c0360eb1461035857806370a082311461036d5780638da5cb5b1461038d57600080fd5b806318160ddd1161010857806318160ddd1461022c57806323b872dd146102505780632a55205a146102705780632e0020e2146102af57806331b3eb94146102c25780633312e33e146102e257600080fd5b806301ffc9a71461014557806306fdde031461017a578063081812fc1461019c578063095ea7b3146101ea57806313af40351461020c575b600080fd5b34801561015157600080fd5b506101656101603660046111fa565b61047d565b60405190151581526020015b60405180910390f35b34801561018657600080fd5b5061018f6104a8565b604051610171919061127a565b3480156101a857600080fd5b506101d26101b736600461128d565b6005602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610171565b3480156101f657600080fd5b5061020a6102053660046112bb565b610536565b005b34801561021857600080fd5b5061020a6102273660046112e7565b61061d565b34801561023857600080fd5b5061024260075481565b604051908152602001610171565b34801561025c57600080fd5b5061020a61026b366004611304565b610692565b34801561027c57600080fd5b5061029061028b366004611345565b610859565b604080516001600160a01b039093168352602083019190915201610171565b61020a6102bd36600461128d565b610897565b3480156102ce57600080fd5b5061020a6102dd3660046112e7565b61095a565b3480156102ee57600080fd5b5061020a6102fd36600461128d565b6109fd565b34801561030e57600080fd5b5061020a61031d366004611304565b610a40565b34801561032e57600080fd5b506101d261033d36600461128d565b610b34565b34801561034e57600080fd5b5061024260095481565b34801561036457600080fd5b5061018f610b8b565b34801561037957600080fd5b506102426103883660046112e7565b610b98565b34801561039957600080fd5b506000546101d2906001600160a01b031681565b3480156103b957600080fd5b5061018f610bfb565b3480156103ce57600080fd5b5061020a6103dd366004611367565b610c08565b3480156103ee57600080fd5b5061020a6103fd3660046113a5565b610c74565b34801561040e57600080fd5b5061018f61041d36600461128d565b610d5c565b34801561042e57600080fd5b5061020a61043d3660046112bb565b610df0565b34801561044e57600080fd5b5061016561045d366004611444565b600660209081526000928352604080842090915290825290205460ff1681565b600063152a902d60e11b6001600160e01b0319831614806104a257506104a282610e64565b92915050565b600180546104b590611472565b80601f01602080910402602001604051908101604052809291908181526020018280546104e190611472565b801561052e5780601f106105035761010080835404028352916020019161052e565b820191906000526020600020905b81548152906001019060200180831161051157829003601f168201915b505050505081565b6000818152600360205260409020546001600160a01b03163381148061057f57506001600160a01b038116600090815260066020908152604080832033845290915290205460ff165b6105c15760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526005602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000546001600160a01b031633146106475760405162461bcd60e51b81526004016105b8906114ac565b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6000818152600360205260409020546001600160a01b038481169116146106e85760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016105b8565b6001600160a01b0382166107325760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016105b8565b336001600160a01b038416148061076c57506001600160a01b038316600090815260066020908152604080832033845290915290205460ff165b8061078d57506000818152600560205260409020546001600160a01b031633145b6107ca5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016105b8565b6001600160a01b0380841660008181526004602090815260408083208054600019019055938616808352848320805460010190558583526003825284832080546001600160a01b03199081168317909155600590925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600b546001600160a01b038116906000906127109061088490600160a01b900462ffffff16856114e8565b61088e919061151d565b90509250929050565b6009548034146108ba57604051636179c97560e01b815260040160405180910390fd5b816008548111156108de5760405163c5d4e17f60e01b815260040160405180910390fd5b8261091f33856040518060400160405280601d81526020017f57656c636f6d6520746f2054686548796472612773205265616c697479000000815250610eb2565b60405184815233907f53bbc60863e580589b5dd8aff312f3c73cefd56b948b3d693dee95cffecf82959060200160405180910390a250505050565b6000546001600160a01b031633146109845760405162461bcd60e51b81526004016105b8906114ac565b60405147906000906001600160a01b0384169083908381818185875af1925050503d80600081146109d1576040519150601f19603f3d011682016040523d82523d6000602084013e6109d6565b606091505b50509050806109f857604051630ba7c14d60e31b815260040160405180910390fd5b505050565b6000818152600360205260409020546001600160a01b03163314610a34576040516357e5f68b60e01b815260040160405180910390fd5b610a3d81610f03565b50565b610a4b838383610692565b6001600160a01b0382163b1580610af55750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4015b6020604051808303816000875af1158015610ac5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae99190611531565b6001600160e01b031916145b6109f85760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016105b8565b6000818152600360205260409020546001600160a01b031680610b865760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016105b8565b919050565b600a80546104b590611472565b60006001600160a01b038216610bdf5760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b60448201526064016105b8565b506001600160a01b031660009081526004602052604090205490565b600280546104b590611472565b3360008181526006602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610c7f858585610692565b6001600160a01b0384163b1580610d165750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290610cc79033908a9089908990899060040161154e565b6020604051808303816000875af1158015610ce6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0a9190611531565b6001600160e01b031916145b610d555760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016105b8565b5050505050565b6000818152600360205260409020546060906001600160a01b0316610d945760405163c5d4e17f60e01b815260040160405180910390fd5b6000600a8054610da390611472565b905011610dbf57604051806020016040528060008152506104a2565b600a610dca83610fd0565b604051602001610ddb9291906115be565b60405160208183030381529060405292915050565b6000546001600160a01b03163314610e1a5760405162461bcd60e51b81526004016105b8906114ac565b604080518082019091526001600160a01b0390921680835262ffffff9091166020909201829052600b8054600160a01b9093026001600160b81b0319909316909117919091179055565b60006301ffc9a760e01b6001600160e01b031983161480610e9557506380ac58cd60e01b6001600160e01b03198316145b806104a25750506001600160e01b031916635b5e139f60e01b1490565b610ebc83836110d9565b6001600160a01b0383163b1580610af55750604051630a85bd0160e11b808252906001600160a01b0385169063150b7a0290610aa690339060009088908890600401611664565b6000818152600360205260409020546001600160a01b031680610f555760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016105b8565b6001600160a01b038116600081815260046020908152604080832080546000190190558583526003825280832080546001600160a01b031990811690915560059092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b606081600003610ff75750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611021578061100b816116a1565b915061101a9050600a8361151d565b9150610ffb565b60008167ffffffffffffffff81111561103c5761103c6116ba565b6040519080825280601f01601f191660200182016040528015611066576020820181803683370190505b5090505b84156110d15761107b6001836116d0565b9150611088600a866116e7565b6110939060306116fb565b60f81b8183815181106110a8576110a8611713565b60200101906001600160f81b031916908160001a9053506110ca600a8661151d565b945061106a565b949350505050565b6001600160a01b0382166111235760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016105b8565b6000818152600360205260409020546001600160a01b0316156111795760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b60448201526064016105b8565b6001600160a01b038216600081815260046020908152604080832080546001019055848352600390915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610a3d57600080fd5b60006020828403121561120c57600080fd5b8135611217816111e4565b9392505050565b60005b83811015611239578181015183820152602001611221565b83811115611248576000848401525b50505050565b6000815180845261126681602086016020860161121e565b601f01601f19169290920160200192915050565b602081526000611217602083018461124e565b60006020828403121561129f57600080fd5b5035919050565b6001600160a01b0381168114610a3d57600080fd5b600080604083850312156112ce57600080fd5b82356112d9816112a6565b946020939093013593505050565b6000602082840312156112f957600080fd5b8135611217816112a6565b60008060006060848603121561131957600080fd5b8335611324816112a6565b92506020840135611334816112a6565b929592945050506040919091013590565b6000806040838503121561135857600080fd5b50508035926020909101359150565b6000806040838503121561137a57600080fd5b8235611385816112a6565b91506020830135801515811461139a57600080fd5b809150509250929050565b6000806000806000608086880312156113bd57600080fd5b85356113c8816112a6565b945060208601356113d8816112a6565b935060408601359250606086013567ffffffffffffffff808211156113fc57600080fd5b818801915088601f83011261141057600080fd5b81358181111561141f57600080fd5b89602082850101111561143157600080fd5b9699959850939650602001949392505050565b6000806040838503121561145757600080fd5b8235611462816112a6565b9150602083013561139a816112a6565b600181811c9082168061148657607f821691505b6020821081036114a657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611502576115026114d2565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261152c5761152c611507565b500490565b60006020828403121561154357600080fd5b8151611217816111e4565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b600081516115b481856020860161121e565b9290920192915050565b600080845481600182811c9150808316806115da57607f831692505b602080841082036115f957634e487b7160e01b86526022600452602486fd5b81801561160d576001811461161e5761164b565b60ff1986168952848901965061164b565b60008b81526020902060005b868110156116435781548b82015290850190830161162a565b505084890196505b50505050505061165b81856115a2565b95945050505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906116979083018461124e565b9695505050505050565b6000600182016116b3576116b36114d2565b5060010190565b634e487b7160e01b600052604160045260246000fd5b6000828210156116e2576116e26114d2565b500390565b6000826116f6576116f6611507565b500690565b6000821982111561170e5761170e6114d2565b500190565b634e487b7160e01b600052603260045260246000fdfea164736f6c634300080d000a416c74657265642045617274683a2054686520487964726120436f6c6c656374696f6e";

type TheHydraConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TheHydraConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TheHydra__factory extends ContractFactory {
  constructor(...args: TheHydraConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TheHydra> {
    return super.deploy(_owner, _baseURI, overrides || {}) as Promise<TheHydra>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, _baseURI, overrides || {});
  }
  override attach(address: string): TheHydra {
    return super.attach(address) as TheHydra;
  }
  override connect(signer: Signer): TheHydra__factory {
    return super.connect(signer) as TheHydra__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TheHydraInterface {
    return new utils.Interface(_abi) as TheHydraInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TheHydra {
    return new Contract(address, _abi, signerOrProvider) as TheHydra;
  }
}
