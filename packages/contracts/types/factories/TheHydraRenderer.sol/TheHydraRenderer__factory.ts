/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TheHydraRenderer,
  TheHydraRendererInterface,
} from "../../TheHydraRenderer.sol/TheHydraRenderer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_theHydra",
        type: "address",
      },
      {
        internalType: "address",
        name: "_theHydraDataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "_xqstgfx",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_editionId",
        type: "uint256",
      },
    ],
    name: "buildOnChainMetaData",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract ITheHydraDataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "dataStoreHistory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_originalId",
        type: "uint256",
      },
    ],
    name: "getOnChainSVG",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_originalId",
        type: "uint256",
      },
    ],
    name: "getOnChainSVG_AsBase64",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dataStore",
        type: "address",
      },
    ],
    name: "setDataStore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_xqstgfx",
        type: "address",
      },
    ],
    name: "setExquisiteGraphics",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "theHydra",
    outputs: [
      {
        internalType: "contract ITheHydra",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "xqstgfx",
    outputs: [
      {
        internalType: "contract IExquisiteGraphics",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052621000006080523480156200001857600080fd5b506040516200185e3803806200185e8339810160408190526200003b916200011b565b600080546001600160a01b0319166001600160a01b03861690811782556040518692907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350600180546001600160a01b039485166001600160a01b031991821617825560028054948616948216851790556003805492830181556000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90910180548216909317909255600480549190931691161790555062000178565b80516001600160a01b03811681146200011657600080fd5b919050565b600080600080608085870312156200013257600080fd5b6200013d85620000fe565b93506200014d60208601620000fe565b92506200015d60408601620000fe565b91506200016d60608601620000fe565b905092959194509250565b6080516116ae620001b0600039600081816102cf015281816105c50152818161065e015281816109bc0152610b4501526116ae6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063843763af11610071578063843763af146101575780638da5cb5b1461016a578063c2a9acc21461017d578063c87b56dd14610190578063d689c592146101a3578063e8874169146101b657600080fd5b806313af4035146100b95780633289f1b9146100ce5780634eaa5b88146100fe578063500065d21461011e57806359a9411314610131578063660d0d6714610144575b600080fd5b6100cc6100c7366004610eea565b6101c9565b005b6001546100e1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61011161010c366004610f13565b610247565b6040516100f59190610f84565b6100cc61012c366004610eea565b61036f565b61011161013f366004610f13565b6103f5565b6002546100e1906001600160a01b031681565b6100cc610165366004610eea565b61086a565b6000546100e1906001600160a01b031681565b6100e161018b366004610f13565b6108b6565b61011161019e366004610f13565b6108e0565b6101116101b1366004610f13565b610a42565b6004546100e1906001600160a01b031681565b6000546001600160a01b031633146101fc5760405162461bcd60e51b81526004016101f390610f97565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b600254604051630178fe3f60e01b8152600481018390526060916000916102c6916001600160a01b031690630178fe3f906024015b600060405180830381865afa158015610299573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102c19190810190611047565b610ac4565b9050600061030b7f0000000000000000000000000000000000000000000000000000000000000000604080518281016060018252910181526000602090910190815290565b90506103556040518060400160405280601a81526020017f646174613a696d6167652f7376672b786d6c3b6261736536342c00000000000081525082610baa90919063ffffffff16565b61036861036183610c35565b8290610baa565b9392505050565b6000546001600160a01b031633146103995760405162461bcd60e51b81526004016101f390610f97565b600280546001600160a01b039092166001600160a01b03199283168117909155600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b018054909216179055565b6001546040805163ad156f7760e01b815290516060926001600160a01b03169163ad156f779160048083019260209291908290030181865afa15801561043f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104639190611090565b82101561051557600260009054906101000a90046001600160a01b03166001600160a01b0316638db1abb56040518163ffffffff1660e01b8152600401600060405180830381865afa1580156104bd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104e59190810190611047565b6104ee83610d9a565b6040516020016104ff9291906110a9565b6040516020818303038152906040529050919050565b600154604051631a6ac7ef60e01b8152600481018490526000916001600160a01b031690631a6ac7ef90602401602060405180830381865afa15801561055f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105839190611090565b600254604051630178fe3f60e01b8152600481018390529192506000916105bc916001600160a01b031690630178fe3f9060240161027c565b905060006106017f0000000000000000000000000000000000000000000000000000000000000000604080518281016060018252910181526000602090910190815290565b905061064b6040518060400160405280601a81526020017f646174613a696d6167652f7376672b786d6c3b6261736536342c00000000000081525082610baa90919063ffffffff16565b61065761036183610c35565b600061069a7f0000000000000000000000000000000000000000000000000000000000000000604080518281016060018252910181526000602090910190815290565b905060006106a787610d9a565b6040516020016106b791906110d8565b604051602081830303815290604052905060006106d386610d9a565b6040516020016106e39190611120565b60405160208183030381529060405290506000846040516020016107079190611268565b604051602081830303815290604052905060006107238a610d9a565b60405160200161073391906112a6565b60408051808303601f190181529082905260015463c006a7d960e01b8352600483018d90529092506000916107bb916001600160a01b03169063c006a7d990602401602060405180830381865afa158015610792573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b69190611090565b610d9a565b60015460408051630a94687b60e31b81529051610806926001600160a01b0316916354a343d89160048083019260209291908290030181865afa158015610792573d6000803e3d6000fd5b604051602001610817929190611314565b604051602081830303815290604052905061085b8585858585604051602001610844959493929190611425565b60408051601f198184030181529190528790610baa565b50939998505050505050505050565b6000546001600160a01b031633146108945760405162461bcd60e51b81526004016101f390610f97565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600381815481106108c657600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546040805163ad156f7760e01b815290516060926001600160a01b03169163ad156f779160048083019260209291908290030181865afa15801561092a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094e9190611090565b8210156109a857600260009054906101000a90046001600160a01b03166001600160a01b0316638db1abb56040518163ffffffff1660e01b8152600401600060405180830381865afa1580156104bd573d6000803e3d6000fd5b60006109b3836103f5565b905060006109f87f0000000000000000000000000000000000000000000000000000000000000000604080518281016060018252910181526000602090910190815290565b90506103556040518060400160405280601d81526020017f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081525082610baa90919063ffffffff16565b600254604051630178fe3f60e01b8152600481018390526060916000916001600160a01b0390911690630178fe3f90602401600060405180830381865afa158015610a91573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ab99190810190611047565b905061036881610ea3565b60048054604051630a19259560e01b81526060926000926001600160a01b031691630a19259591610af791879101610f84565b600060405180830381865afa158015610b14573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b3c9190810190611047565b90506000610b817f0000000000000000000000000000000000000000000000000000000000000000604080518281016060018252910181526000602090910190815290565b905061036882604051602001610b9791906114b0565b60408051601f1981840301815291905282905b601f1982015182518251603f19909201918290610bc790836115a6565b1115610c255760405162461bcd60e51b815260206004820152602760248201527f44796e616d69634275666665723a20417070656e64696e67206f7574206f66206044820152663137bab732399760c91b60648201526084016101f3565b610c2f8484610eb4565b50505050565b60608151600003610c5457505060408051602081019091526000815290565b60006040518060600160405280604081526020016116626040913990506000600384516002610c8391906115a6565b610c8d91906115d4565b610c989060046115e8565b90506000610ca78260206115a6565b67ffffffffffffffff811115610cbf57610cbf610fbd565b6040519080825280601f01601f191660200182016040528015610ce9576020820181803683370190505b509050818152600183018586518101602084015b81831015610d55576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825350600101610cfd565b600389510660018114610d6f5760028114610d8057610d8c565b613d3d60f01b600119830152610d8c565b603d60f81b6000198301525b509398975050505050505050565b606081600003610dc15750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610deb5780610dd581611607565b9150610de49050600a836115d4565b9150610dc5565b60008167ffffffffffffffff811115610e0657610e06610fbd565b6040519080825280601f01601f191660200182016040528015610e30576020820181803683370190505b5090505b8415610e9b57610e45600183611620565b9150610e52600a86611637565b610e5d9060306115a6565b60f81b818381518110610e7257610e7261164b565b60200101906001600160f81b031916908160001a905350610e94600a866115d4565b9450610e34565b949350505050565b6060610eae82610ac4565b92915050565b8051602082019150808201602084510184015b81841015610edf578351815260209384019301610ec7565b505082510190915250565b600060208284031215610efc57600080fd5b81356001600160a01b038116811461036857600080fd5b600060208284031215610f2557600080fd5b5035919050565b60005b83811015610f47578181015183820152602001610f2f565b83811115610c2f5750506000910152565b60008151808452610f70816020860160208601610f2c565b601f01601f19169290920160200192915050565b6020815260006103686020830184610f58565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115610fee57610fee610fbd565b604051601f8501601f19908116603f0116810190828211818310171561101657611016610fbd565b8160405280935085815286868601111561102f57600080fd5b61103d866020830187610f2c565b5050509392505050565b60006020828403121561105957600080fd5b815167ffffffffffffffff81111561107057600080fd5b8201601f8101841361108157600080fd5b610e9b84825160208401610fd3565b6000602082840312156110a257600080fd5b5051919050565b600083516110bb818460208801610f2c565b8351908301906110cf818360208801610f2c565b01949350505050565b72226e616d65223a22546865204879647261202360681b81528151600090611107816013850160208701610f2c565b61088b60f21b6013939091019283015250601501919050565b7f226465736372697074696f6e223a22416e20616c7465726564207265616c697481527f79206578697374696e6720666f7265766572206f6e207468652045746865726560208201527f756d20626c6f636b636861696e2e20546869732065646974696f6e206973206160408201527f2066756c6c79206f6e2d636861696e205356472076657273696f6e206f6620546060820152696865204879647261202360b01b6080820152600082516111dd81608a850160208701610f2c565b7f2e2035302065646974696f6e7320657869737420666f722065616368206f7269608a9390910192830152507f67696e616c2070686f746f2e204561636820746f6b656e20636f6e666f726d7360aa8201527f20746f20746865204552432d373231207374616e646172642e0000000000000060ca82015261088b60f21b60e382015260e501919050565b681134b6b0b3b2911d1160b91b8152815160009061128d816009850160208701610f2c565b61088b60f21b6009939091019283015250600b01919050565b7f2265787465726e616c5f75726c223a2268747470733a2f2f616c74657265642d81527365617274682e78797a2f7468652d68796472612f60601b6020820152600082516112fb816034850160208701610f2c565b61088b60f21b6034939091019283015250603601919050565b6d2261747472696275746573223a5b60901b81527f7b2274726169745f74797065223a2245646974696f6e222c2276616c7565223a600e820152601160f91b602e820152825160009061136e81602f850160208801610f2c565b6301037b3160e51b602f918401918201528351611392816033840160208801610f2c565b62089f4b60ea1b910160338101919091527f7b2274726169745f74797065223a2253697a65222c2276616c7565223a2236346036820152671e0d8d1c1e089f4b60c21b60568201527f7b2274726169745f74797065223a22436f6c6f7273222c2276616c7565223a22605e82015264323536227d60d81b607e820152605d60f81b60838201526084810195945050505050565b607b60f81b81526000600187516114428183860160208c01610f2c565b8751908401906114588184840160208c01610f2c565b875191019061146d8184840160208b01610f2c565b86519101906114828184840160208a01610f2c565b85519101906114978184840160208901610f2c565b607d60f81b910191820152600201979650505050505050565b7f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323081527f30302f737667222073686170652d72656e646572696e673d226372697370456460208201527f676573222077696474683d223130302522206865696768743d2231303025222060408201527f76657273696f6e3d22312e31222076696577426f783d2230203020313238203160608201526f191c11103334b6361e9111b33333111f60811b608082015260008251611573816090850160208701610f2c565b651e17b9bb339f60d11b6090939091019283015250609601919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156115b9576115b9611590565b500190565b634e487b7160e01b600052601260045260246000fd5b6000826115e3576115e36115be565b500490565b600081600019048311821515161561160257611602611590565b500290565b60006001820161161957611619611590565b5060010190565b60008282101561163257611632611590565b500390565b600082611646576116466115be565b500690565b634e487b7160e01b600052603260045260246000fdfe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa164736f6c634300080d000a";

type TheHydraRendererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TheHydraRendererConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TheHydraRenderer__factory extends ContractFactory {
  constructor(...args: TheHydraRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    _theHydra: PromiseOrValue<string>,
    _theHydraDataStore: PromiseOrValue<string>,
    _xqstgfx: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TheHydraRenderer> {
    return super.deploy(
      _owner,
      _theHydra,
      _theHydraDataStore,
      _xqstgfx,
      overrides || {}
    ) as Promise<TheHydraRenderer>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    _theHydra: PromiseOrValue<string>,
    _theHydraDataStore: PromiseOrValue<string>,
    _xqstgfx: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _theHydra,
      _theHydraDataStore,
      _xqstgfx,
      overrides || {}
    );
  }
  override attach(address: string): TheHydraRenderer {
    return super.attach(address) as TheHydraRenderer;
  }
  override connect(signer: Signer): TheHydraRenderer__factory {
    return super.connect(signer) as TheHydraRenderer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TheHydraRendererInterface {
    return new utils.Interface(_abi) as TheHydraRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TheHydraRenderer {
    return new Contract(address, _abi, signerOrProvider) as TheHydraRenderer;
  }
}
