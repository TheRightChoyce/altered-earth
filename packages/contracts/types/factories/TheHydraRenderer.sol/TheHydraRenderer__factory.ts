/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TheHydraRenderer,
  TheHydraRendererInterface,
} from "../../TheHydraRenderer.sol/TheHydraRenderer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_theHydra",
        type: "address",
      },
      {
        internalType: "address",
        name: "_theHydraDataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "_xqstgfx",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract ITheHydraDataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getOnChainSVG",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getOnChainSVG_AsBase64",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "renderSVG",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "renderSVG_AsString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "theHydra",
    outputs: [
      {
        internalType: "contract ITheHydra",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_renderType",
        type: "string",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "xqstgfx",
    outputs: [
      {
        internalType: "contract IExquisiteGraphics",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610e46380380610e4683398101604081905261002f9161008d565b600080546001600160a01b039485166001600160a01b0319918216179091556001805493851693821693909317909255600280549190931691161790556100d0565b80516001600160a01b038116811461008857600080fd5b919050565b6000806000606084860312156100a257600080fd5b6100ab84610071565b92506100b960208501610071565b91506100c760408501610071565b90509250925092565b610d67806100df6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063660d0d6711610066578063660d0d671461010e578063a388fd9214610121578063c87b56dd14610134578063d689c59214610147578063e88741691461015a57600080fd5b80633289f1b9146100985780633d1acdb4146100c857806341dcf454146100e85780634eaa5b88146100fb575b600080fd5b6000546100ab906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100db6100d63660046108a9565b61016d565b6040516100bf9190610981565b6100db6100f6366004610994565b61017e565b6100db610109366004610a10565b610227565b6001546100ab906001600160a01b031681565b6100db61012f3660046108a9565b610324565b6100db610142366004610a10565b6103eb565b6100db610155366004610a10565b61048d565b6002546100ab906001600160a01b031681565b606061017882610324565b92915050565b60015460408051638db1abb560e01b815290516060926001600160a01b031691638db1abb59160048083019260009291908290030181865afa1580156101c8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101f09190810190610a59565b83836101fb8761050f565b60405160200161020e9493929190610aa2565b60405160208183030381529060405290505b9392505050565b60015460405163b4e169cb60e01b8152600481018390526060916000916001600160a01b039091169063b4e169cb90602401600060405180830381865afa158015610276573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261029e9190810190610a59565b905060006102ab82610324565b604080516208006081018252620800408152600060209182019081528251808401909352601a83527f646174613a696d6167652f7376672b786d6c3b6261736536342c00000000000091830191909152919250610309908290610610565b61031c6103158361069f565b8290610610565b949350505050565b600254604051630a19259560e01b81526060916000916001600160a01b0390911690630a1925959061035a908690600401610981565b600060405180830381865afa158015610377573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261039f9190810190610a59565b604080516208006081019091526208004081526000602090910181815291925050610220826040516020016103d49190610add565b60408051601f198184030181529190528290610610565b60015460408051638db1abb560e01b815290516060926001600160a01b031691638db1abb59160048083019260009291908290030181865afa158015610435573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261045d9190810190610a59565b6104668361050f565b604051602001610477929190610c1a565b6040516020818303038152906040529050919050565b60015460405163b4e169cb60e01b8152600481018390526060916000916001600160a01b039091169063b4e169cb90602401600060405180830381865afa1580156104dc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105049190810190610a59565b90506102208161016d565b6060816000036105365750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610560578061054a81610c5f565b91506105599050600a83610c8e565b915061053a565b60008167ffffffffffffffff81111561057b5761057b61083a565b6040519080825280601f01601f1916602001820160405280156105a5576020820181803683370190505b5090505b841561031c576105ba600183610ca2565b91506105c7600a86610cb9565b6105d2906030610ccd565b60f81b8183815181106105e7576105e7610ce5565b60200101906001600160f81b031916908160001a905350610609600a86610c8e565b94506105a9565b601f1982015182518251603f1990920191829061062d9083610ccd565b111561068f5760405162461bcd60e51b815260206004820152602760248201527f44796e616d69634275666665723a20417070656e64696e67206f7574206f66206044820152663137bab732399760c91b606482015260840160405180910390fd5b6106998484610804565b50505050565b606081516000036106be57505060408051602081019091526000815290565b6000604051806060016040528060408152602001610d1b60409139905060006003845160026106ed9190610ccd565b6106f79190610c8e565b610702906004610cfb565b90506000610711826020610ccd565b67ffffffffffffffff8111156107295761072961083a565b6040519080825280601f01601f191660200182016040528015610753576020820181803683370190505b509050818152600183018586518101602084015b818310156107bf576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825350600101610767565b6003895106600181146107d957600281146107ea576107f6565b613d3d60f01b6001198301526107f6565b603d60f81b6000198301525b509398975050505050505050565b8051602082019150808201602084510184015b8184101561082f578351815260209384019301610817565b505082510190915250565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156108795761087961083a565b604052919050565b600067ffffffffffffffff82111561089b5761089b61083a565b50601f01601f191660200190565b6000602082840312156108bb57600080fd5b813567ffffffffffffffff8111156108d257600080fd5b8201601f810184136108e357600080fd5b80356108f66108f182610881565b610850565b81815285602083850101111561090b57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b8381101561094457818101518382015260200161092c565b838111156106995750506000910152565b6000815180845261096d816020860160208601610929565b601f01601f19169290920160200192915050565b6020815260006102206020830184610955565b6000806000604084860312156109a957600080fd5b83359250602084013567ffffffffffffffff808211156109c857600080fd5b818601915086601f8301126109dc57600080fd5b8135818111156109eb57600080fd5b8760208285010111156109fd57600080fd5b6020830194508093505050509250925092565b600060208284031215610a2257600080fd5b5035919050565b6000610a376108f184610881565b9050828152838383011115610a4b57600080fd5b610220836020830184610929565b600060208284031215610a6b57600080fd5b815167ffffffffffffffff811115610a8257600080fd5b8201601f81018413610a9357600080fd5b61031c84825160208401610a29565b60008551610ab4818460208a01610929565b82018486823760009085019081528351610ad2818360208801610929565b019695505050505050565b7f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323081527f30302f737667222073686170652d72656e646572696e673d226372697370456460208201527f676573222077696474683d223130302522206865696768743d2231303025222060408201527f76657273696f6e3d22312e31222076696577426f783d2230203020313238203160608201527f3238222066696c6c3d2223666666223e3c726563742077696474683d2231323860808201527f22206865696768743d22313238222066696c6c3d222366666622202f3e3c672060a08201527f7472616e73666f726d3d227472616e736c6174652833322c333229223e00000060c082015260008251610bf98160dd850160208701610929565b691e17b39f1e17b9bb339f60b11b60dd93909101928301525060e701919050565b60008351610c2c818460208801610929565b835190830190610c40818360208801610929565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600060018201610c7157610c71610c49565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082610c9d57610c9d610c78565b500490565b600082821015610cb457610cb4610c49565b500390565b600082610cc857610cc8610c78565b500690565b60008219821115610ce057610ce0610c49565b500190565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615610d1557610d15610c49565b50029056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa164736f6c634300080d000a";

type TheHydraRendererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TheHydraRendererConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TheHydraRenderer__factory extends ContractFactory {
  constructor(...args: TheHydraRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _theHydra: PromiseOrValue<string>,
    _theHydraDataStore: PromiseOrValue<string>,
    _xqstgfx: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TheHydraRenderer> {
    return super.deploy(
      _theHydra,
      _theHydraDataStore,
      _xqstgfx,
      overrides || {}
    ) as Promise<TheHydraRenderer>;
  }
  override getDeployTransaction(
    _theHydra: PromiseOrValue<string>,
    _theHydraDataStore: PromiseOrValue<string>,
    _xqstgfx: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _theHydra,
      _theHydraDataStore,
      _xqstgfx,
      overrides || {}
    );
  }
  override attach(address: string): TheHydraRenderer {
    return super.attach(address) as TheHydraRenderer;
  }
  override connect(signer: Signer): TheHydraRenderer__factory {
    return super.connect(signer) as TheHydraRenderer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TheHydraRendererInterface {
    return new utils.Interface(_abi) as TheHydraRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TheHydraRenderer {
    return new Contract(address, _abi, signerOrProvider) as TheHydraRenderer;
  }
}
