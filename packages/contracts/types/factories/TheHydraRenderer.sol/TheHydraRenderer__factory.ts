/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TheHydraRenderer,
  TheHydraRendererInterface,
} from "../../TheHydraRenderer.sol/TheHydraRenderer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_theHydraDataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "_xqstgfx",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_editionId",
        type: "uint256",
      },
    ],
    name: "buildOnChainMetaData",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract ITheHydraDataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "dataStoreHistory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_originalId",
        type: "uint256",
      },
    ],
    name: "getOnChainSVG",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_originalId",
        type: "uint256",
      },
    ],
    name: "getOnChainSVG_AsBase64",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dataStore",
        type: "address",
      },
    ],
    name: "setDataStore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_xqstgfx",
        type: "address",
      },
    ],
    name: "setExquisiteGraphics",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "xqstgfx",
    outputs: [
      {
        internalType: "contract IExquisiteGraphics",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052621000006080523480156200001857600080fd5b506040516200164f3803806200164f8339810160408190526200003b916200010e565b600080546001600160a01b0319166001600160a01b03851690811782556040518592907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350600180546001600160a01b039384166001600160a01b0319918216811783556002805493840181556000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90920180548216909217909155600380549290931691161790555062000158565b80516001600160a01b03811681146200010957600080fd5b919050565b6000806000606084860312156200012457600080fd5b6200012f84620000f1565b92506200013f60208501620000f1565b91506200014f60408501620000f1565b90509250925092565b6080516114bf62000190600039600081816102b5015281816105020152818161059b015281816107e3015261096f01526114bf6000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063843763af11610071578063843763af1461013d5780638da5cb5b14610150578063c2a9acc214610163578063c87b56dd14610176578063d689c59214610189578063e88741691461019c57600080fd5b806313af4035146100ae5780634eaa5b88146100c3578063500065d2146100ec57806359a94113146100ff578063660d0d6714610112575b600080fd5b6100c16100bc366004610d14565b6101af565b005b6100d66100d1366004610d3d565b61022d565b6040516100e39190610dae565b60405180910390f35b6100c16100fa366004610d14565b610355565b6100d661010d366004610d3d565b6103d8565b600154610125906001600160a01b031681565b6040516001600160a01b0390911681526020016100e3565b6100c161014b366004610d14565b6106fb565b600054610125906001600160a01b031681565b610125610171366004610d3d565b610747565b6100d6610184366004610d3d565b610771565b6100d6610197366004610d3d565b610869565b600354610125906001600160a01b031681565b6000546001600160a01b031633146101e25760405162461bcd60e51b81526004016101d990610dc1565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b600154604051630178fe3f60e01b8152600481018390526060916000916102ac916001600160a01b031690630178fe3f906024015b600060405180830381865afa15801561027f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102a79190810190610e71565b6108eb565b905060006102f17f0000000000000000000000000000000000000000000000000000000000000000604080518281016060018252910181526000602090910190815290565b905061033b6040518060400160405280601a81526020017f646174613a696d6167652f7376672b786d6c3b6261736536342c000000000000815250826109d490919063ffffffff16565b61034e61034783610a5f565b82906109d4565b9392505050565b6000546001600160a01b0316331461037f5760405162461bcd60e51b81526004016101d990610dc1565b600180546001600160a01b039092166001600160a01b0319928316811782556002805492830181556000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace9091018054909216179055565b6060603282101561048e57600160009054906101000a90046001600160a01b03166001600160a01b0316638db1abb56040518163ffffffff1660e01b8152600401600060405180830381865afa158015610436573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261045e9190810190610e71565b61046783610bc4565b604051602001610478929190610eba565b6040516020818303038152906040529050919050565b6000603261049c8185610eff565b6104a69190610f2c565b905060006104b5603285610f40565b6104c0906001610f54565b600154604051630178fe3f60e01b8152600481018590529192506000916104f9916001600160a01b031690630178fe3f90602401610262565b9050600061053e7f0000000000000000000000000000000000000000000000000000000000000000604080518281016060018252910181526000602090910190815290565b90506105886040518060400160405280601a81526020017f646174613a696d6167652f7376672b786d6c3b6261736536342c000000000000815250826109d490919063ffffffff16565b61059461034783610a5f565b60006105d77f0000000000000000000000000000000000000000000000000000000000000000604080518281016060018252910181526000602090910190815290565b905060006105e488610bc4565b6040516020016105f49190610f6c565b6040516020818303038152906040529050600061061087610bc4565b6040516020016106209190610fb4565b604051602081830303815290604052905060008460405160200161064491906110fc565b604051602081830303815290604052905060006106608b610bc4565b604051602001610670919061113a565b6040516020818303038152906040529050600061068c89610bc4565b6106966032610bc4565b6040516020016106a79291906111a8565b60405160208183030381529060405290506106eb85858585856040516020016106d49594939291906112b9565b60408051601f1981840301815291905287906109d4565b50939a9950505050505050505050565b6000546001600160a01b031633146107255760405162461bcd60e51b81526004016101d990610dc1565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6002818154811061075757600080fd5b6000918252602090912001546001600160a01b0316905081565b606060328210156107cf57600160009054906101000a90046001600160a01b03166001600160a01b0316638db1abb56040518163ffffffff1660e01b8152600401600060405180830381865afa158015610436573d6000803e3d6000fd5b60006107da836103d8565b9050600061081f7f0000000000000000000000000000000000000000000000000000000000000000604080518281016060018252910181526000602090910190815290565b905061033b6040518060400160405280601d81526020017f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815250826109d490919063ffffffff16565b600154604051630178fe3f60e01b8152600481018390526060916000916001600160a01b0390911690630178fe3f90602401600060405180830381865afa1580156108b8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108e09190810190610e71565b905061034e81610ccd565b600354604051630a19259560e01b81526060916000916001600160a01b0390911690630a19259590610921908690600401610dae565b600060405180830381865afa15801561093e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109669190810190610e71565b905060006109ab7f0000000000000000000000000000000000000000000000000000000000000000604080518281016060018252910181526000602090910190815290565b905061034e826040516020016109c19190611344565b60408051601f1981840301815291905282905b601f1982015182518251603f199092019182906109f19083610f54565b1115610a4f5760405162461bcd60e51b815260206004820152602760248201527f44796e616d69634275666665723a20417070656e64696e67206f7574206f66206044820152663137bab732399760c91b60648201526084016101d9565b610a598484610cde565b50505050565b60608151600003610a7e57505060408051602081019091526000815290565b60006040518060600160405280604081526020016114736040913990506000600384516002610aad9190610f54565b610ab79190610f2c565b610ac2906004611424565b90506000610ad1826020610f54565b67ffffffffffffffff811115610ae957610ae9610de7565b6040519080825280601f01601f191660200182016040528015610b13576020820181803683370190505b509050818152600183018586518101602084015b81831015610b7f576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825350600101610b27565b600389510660018114610b995760028114610baa57610bb6565b613d3d60f01b600119830152610bb6565b603d60f81b6000198301525b509398975050505050505050565b606081600003610beb5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610c155780610bff81611443565b9150610c0e9050600a83610f2c565b9150610bef565b60008167ffffffffffffffff811115610c3057610c30610de7565b6040519080825280601f01601f191660200182016040528015610c5a576020820181803683370190505b5090505b8415610cc557610c6f600183610eff565b9150610c7c600a86610f40565b610c87906030610f54565b60f81b818381518110610c9c57610c9c61145c565b60200101906001600160f81b031916908160001a905350610cbe600a86610f2c565b9450610c5e565b949350505050565b6060610cd8826108eb565b92915050565b8051602082019150808201602084510184015b81841015610d09578351815260209384019301610cf1565b505082510190915250565b600060208284031215610d2657600080fd5b81356001600160a01b038116811461034e57600080fd5b600060208284031215610d4f57600080fd5b5035919050565b60005b83811015610d71578181015183820152602001610d59565b83811115610a595750506000910152565b60008151808452610d9a816020860160208601610d56565b601f01601f19169290920160200192915050565b60208152600061034e6020830184610d82565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115610e1857610e18610de7565b604051601f8501601f19908116603f01168101908282118183101715610e4057610e40610de7565b81604052809350858152868686011115610e5957600080fd5b610e67866020830187610d56565b5050509392505050565b600060208284031215610e8357600080fd5b815167ffffffffffffffff811115610e9a57600080fd5b8201601f81018413610eab57600080fd5b610cc584825160208401610dfd565b60008351610ecc818460208801610d56565b835190830190610ee0818360208801610d56565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015610f1157610f11610ee9565b500390565b634e487b7160e01b600052601260045260246000fd5b600082610f3b57610f3b610f16565b500490565b600082610f4f57610f4f610f16565b500690565b60008219821115610f6757610f67610ee9565b500190565b72226e616d65223a22546865204879647261202360681b81528151600090610f9b816013850160208701610d56565b61088b60f21b6013939091019283015250601501919050565b7f226465736372697074696f6e223a22416e20616c7465726564207265616c697481527f79206578697374696e6720666f7265766572206f6e207468652045746865726560208201527f756d20626c6f636b636861696e2e20546869732065646974696f6e206973206160408201527f2066756c6c79206f6e2d636861696e205356472076657273696f6e206f6620546060820152696865204879647261202360b01b60808201526000825161107181608a850160208701610d56565b7f2e2035302065646974696f6e7320657869737420666f722065616368206f7269608a9390910192830152507f67696e616c2070686f746f2e204561636820746f6b656e20636f6e666f726d7360aa8201527f20746f20746865204552432d373231207374616e646172642e0000000000000060ca82015261088b60f21b60e382015260e501919050565b681134b6b0b3b2911d1160b91b81528151600090611121816009850160208701610d56565b61088b60f21b6009939091019283015250600b01919050565b7f2265787465726e616c5f75726c223a2268747470733a2f2f616c74657265642d81527365617274682e78797a2f7468652d68796472612f60601b60208201526000825161118f816034850160208701610d56565b61088b60f21b6034939091019283015250603601919050565b6d2261747472696275746573223a5b60901b81527f7b2274726169745f74797065223a2245646974696f6e222c2276616c7565223a600e820152601160f91b602e820152825160009061120281602f850160208801610d56565b6301037b3160e51b602f918401918201528351611226816033840160208801610d56565b62089f4b60ea1b910160338101919091527f7b2274726169745f74797065223a2253697a65222c2276616c7565223a2236346036820152671e0d8d1c1e089f4b60c21b60568201527f7b2274726169745f74797065223a22436f6c6f7273222c2276616c7565223a22605e82015264323536227d60d81b607e820152605d60f81b60838201526084810195945050505050565b607b60f81b81526000600187516112d68183860160208c01610d56565b8751908401906112ec8184840160208c01610d56565b87519101906113018184840160208b01610d56565b86519101906113168184840160208a01610d56565b855191019061132b8184840160208901610d56565b607d60f81b910191820152600201979650505050505050565b7f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323081527f30302f737667222073686170652d72656e646572696e673d226372697370456460208201527f676573222077696474683d223130302522206865696768743d2231303025222060408201527f76657273696f6e3d22312e31222076696577426f783d2230203020313238203160608201526f191c11103334b6361e9111b33333111f60811b608082015260008251611407816090850160208701610d56565b651e17b9bb339f60d11b6090939091019283015250609601919050565b600081600019048311821515161561143e5761143e610ee9565b500290565b60006001820161145557611455610ee9565b5060010190565b634e487b7160e01b600052603260045260246000fdfe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa164736f6c634300080d000a";

type TheHydraRendererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TheHydraRendererConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TheHydraRenderer__factory extends ContractFactory {
  constructor(...args: TheHydraRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    _theHydraDataStore: PromiseOrValue<string>,
    _xqstgfx: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TheHydraRenderer> {
    return super.deploy(
      _owner,
      _theHydraDataStore,
      _xqstgfx,
      overrides || {}
    ) as Promise<TheHydraRenderer>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    _theHydraDataStore: PromiseOrValue<string>,
    _xqstgfx: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _theHydraDataStore,
      _xqstgfx,
      overrides || {}
    );
  }
  override attach(address: string): TheHydraRenderer {
    return super.attach(address) as TheHydraRenderer;
  }
  override connect(signer: Signer): TheHydraRenderer__factory {
    return super.connect(signer) as TheHydraRenderer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TheHydraRendererInterface {
    return new utils.Interface(_abi) as TheHydraRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TheHydraRenderer {
    return new Contract(address, _abi, signerOrProvider) as TheHydraRenderer;
  }
}
