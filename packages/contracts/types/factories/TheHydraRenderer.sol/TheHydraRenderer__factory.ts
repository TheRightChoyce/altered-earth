/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TheHydraRenderer,
  TheHydraRendererInterface,
} from "../../TheHydraRenderer.sol/TheHydraRenderer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_theHydra",
        type: "address",
      },
      {
        internalType: "address",
        name: "_theHydraDataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "_xqstgfx",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract ITheHydraDataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "dataStoreHistory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getOnChainSVG",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getOnChainSVG_AsBase64",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "renderSVG",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "renderSVG_AsString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dataStore",
        type: "address",
      },
    ],
    name: "setDataStore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_xqstgfx",
        type: "address",
      },
    ],
    name: "setExquisiteGraphics",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "theHydra",
    outputs: [
      {
        internalType: "contract ITheHydra",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_renderType",
        type: "string",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "tokenURI_AsString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "xqstgfx",
    outputs: [
      {
        internalType: "contract IExquisiteGraphics",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620019d4380380620019d48339810160408190526200003491620000de565b600080546001600160a01b0319166001600160a01b03861690811782556040518692907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350600180546001600160a01b039485166001600160a01b031991821617909155600280549385169382169390931790925560048054919093169116179055506200013b565b80516001600160a01b0381168114620000d957600080fd5b919050565b60008060008060808587031215620000f557600080fd5b6200010085620000c1565b93506200011060208601620000c1565b92506200012060408601620000c1565b91506200013060608601620000c1565b905092959194509250565b611889806200014b6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063843763af11610097578063c2a9acc211610066578063c2a9acc2146101f7578063c87b56dd1461020a578063d689c5921461021d578063e88741691461023057600080fd5b8063843763af146101ab5780638da5cb5b146101be578063a388fd92146101d1578063b1aae53c146101e457600080fd5b806341dcf454116100d357806341dcf4541461015f5780634eaa5b8814610172578063500065d214610185578063660d0d671461019857600080fd5b806313af4035146100fa5780633289f1b91461010f5780633d1acdb41461013f575b600080fd5b61010d610108366004610f79565b610243565b005b600154610122906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61015261014d366004611011565b6102c1565b60405161013691906110e9565b61015261016d3660046110fc565b6102d2565b610152610180366004611178565b61037b565b61010d610193366004610f79565b610478565b600254610122906001600160a01b031681565b61010d6101b9366004610f79565b6104fe565b600054610122906001600160a01b031681565b6101526101df366004611011565b61054a565b6101526101f2366004611178565b61060e565b610122610205366004611178565b610a69565b610152610218366004611178565b610a93565b61015261022b366004611178565b610bd0565b600454610122906001600160a01b031681565b6000546001600160a01b031633146102765760405162461bcd60e51b815260040161026d90611191565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b60606102cc8261054a565b92915050565b60025460408051638db1abb560e01b815290516060926001600160a01b031691638db1abb59160048083019260009291908290030181865afa15801561031c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261034491908101906111e7565b838361034f87610c52565b6040516020016103629493929190611230565b60405160208183030381529060405290505b9392505050565b600254604051630178fe3f60e01b8152600481018390526060916000916001600160a01b0390911690630178fe3f90602401600060405180830381865afa1580156103ca573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103f291908101906111e7565b905060006103ff8261054a565b604080516208006081018252620800408152600060209182019081528251808401909352601a83527f646174613a696d6167652f7376672b786d6c3b6261736536342c0000000000009183019190915291925061045d908290610d53565b61047061046983610dde565b8290610d53565b949350505050565b6000546001600160a01b031633146104a25760405162461bcd60e51b815260040161026d90611191565b600280546001600160a01b039092166001600160a01b03199283168117909155600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b018054909216179055565b6000546001600160a01b031633146105285760405162461bcd60e51b815260040161026d90611191565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b60048054604051630a19259560e01b81526060926000926001600160a01b031691630a1925959161057d918791016110e9565b600060405180830381865afa15801561059a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105c291908101906111e7565b604080516208006081019091526208004081526000602090910181815291925050610374826040516020016105f7919061126b565b60408051601f198184030181529190528290610d53565b6001546040805163ad156f7760e01b815290516060926001600160a01b03169163ad156f779160048083019260209291908290030181865afa158015610658573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067c919061134b565b82101561072e57600260009054906101000a90046001600160a01b03166001600160a01b0316638db1abb56040518163ffffffff1660e01b8152600401600060405180830381865afa1580156106d6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106fe91908101906111e7565b61070783610c52565b604051602001610718929190611364565b6040516020818303038152906040529050919050565b600154604051633b6f14e960e21b8152600481018490526000916001600160a01b03169063edbc53a490602401602060405180830381865afa158015610778573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079c919061134b565b600254604051630178fe3f60e01b815260048101839052919250600091610815916001600160a01b031690630178fe3f90602401600060405180830381865afa1580156107ed573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101df91908101906111e7565b604080516210006081018252621000408152600060209182019081528251808401909352601a83527f646174613a696d6167652f7376672b786d6c3b6261736536342c00000000000091830191909152919250610873908290610d53565b61087f61046983610dde565b6040805162100060810190915262100040815260006020909101818152906108a687610c52565b6040516020016108b69190611393565b604051602081830303815290604052905060006108d286610c52565b6040516020016108e291906113db565b60405160208183030381529060405290506000846040516020016109069190611523565b604051602081830303815290604052905060006109228a610c52565b6040516020016109329190611561565b60408051808303601f1901815290829052600154631bf205f960e11b8352600483018d90529092506000916109ba916001600160a01b0316906337e40bf290602401602060405180830381865afa158015610991573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b5919061134b565b610c52565b60015460408051630a94687b60e31b81529051610a05926001600160a01b0316916354a343d89160048083019260209291908290030181865afa158015610991573d6000803e3d6000fd5b604051602001610a169291906115cf565b6040516020818303038152906040529050610a5a8585858585604051602001610a439594939291906116e0565b60408051601f198184030181529190528790610d53565b50939998505050505050505050565b60038181548110610a7957600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546040805163ad156f7760e01b815290516060926001600160a01b03169163ad156f779160048083019260209291908290030181865afa158015610add573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b01919061134b565b821015610b5b57600260009054906101000a90046001600160a01b03166001600160a01b0316638db1abb56040518163ffffffff1660e01b8152600401600060405180830381865afa1580156106d6573d6000803e3d6000fd5b6000610b668361060e565b604080516210006081018252621000408152600060209182019081528251808401909352601d83527f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000091830191909152919250610bc4908290610d53565b61037461046983610dde565b600254604051630178fe3f60e01b8152600481018390526060916000916001600160a01b0390911690630178fe3f90602401600060405180830381865afa158015610c1f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c4791908101906111e7565b9050610374816102c1565b606081600003610c795750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610ca35780610c8d81611781565b9150610c9c9050600a836117b0565b9150610c7d565b60008167ffffffffffffffff811115610cbe57610cbe610fa2565b6040519080825280601f01601f191660200182016040528015610ce8576020820181803683370190505b5090505b841561047057610cfd6001836117c4565b9150610d0a600a866117db565b610d159060306117ef565b60f81b818381518110610d2a57610d2a611807565b60200101906001600160f81b031916908160001a905350610d4c600a866117b0565b9450610cec565b601f1982015182518251603f19909201918290610d7090836117ef565b1115610dce5760405162461bcd60e51b815260206004820152602760248201527f44796e616d69634275666665723a20417070656e64696e67206f7574206f66206044820152663137bab732399760c91b606482015260840161026d565b610dd88484610f43565b50505050565b60608151600003610dfd57505060408051602081019091526000815290565b600060405180606001604052806040815260200161183d6040913990506000600384516002610e2c91906117ef565b610e3691906117b0565b610e4190600461181d565b90506000610e508260206117ef565b67ffffffffffffffff811115610e6857610e68610fa2565b6040519080825280601f01601f191660200182016040528015610e92576020820181803683370190505b509050818152600183018586518101602084015b81831015610efe576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825350600101610ea6565b600389510660018114610f185760028114610f2957610f35565b613d3d60f01b600119830152610f35565b603d60f81b6000198301525b509398975050505050505050565b8051602082019150808201602084510184015b81841015610f6e578351815260209384019301610f56565b505082510190915250565b600060208284031215610f8b57600080fd5b81356001600160a01b038116811461037457600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610fe157610fe1610fa2565b604052919050565b600067ffffffffffffffff82111561100357611003610fa2565b50601f01601f191660200190565b60006020828403121561102357600080fd5b813567ffffffffffffffff81111561103a57600080fd5b8201601f8101841361104b57600080fd5b803561105e61105982610fe9565b610fb8565b81815285602083850101111561107357600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b838110156110ac578181015183820152602001611094565b83811115610dd85750506000910152565b600081518084526110d5816020860160208601611091565b601f01601f19169290920160200192915050565b60208152600061037460208301846110bd565b60008060006040848603121561111157600080fd5b83359250602084013567ffffffffffffffff8082111561113057600080fd5b818601915086601f83011261114457600080fd5b81358181111561115357600080fd5b87602082850101111561116557600080fd5b6020830194508093505050509250925092565b60006020828403121561118a57600080fd5b5035919050565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b60006111c561105984610fe9565b90508281528383830111156111d957600080fd5b610374836020830184611091565b6000602082840312156111f957600080fd5b815167ffffffffffffffff81111561121057600080fd5b8201601f8101841361122157600080fd5b610470848251602084016111b7565b60008551611242818460208a01611091565b82018486823760009085019081528351611260818360208801611091565b019695505050505050565b7f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323081527f30302f737667222073686170652d72656e646572696e673d226372697370456460208201527f676573222077696474683d223130302522206865696768743d2231303025222060408201527f76657273696f6e3d22312e31222076696577426f783d2230203020313238203160608201526f191c11103334b6361e9111b33333111f60811b60808201526000825161132e816090850160208701611091565b651e17b9bb339f60d11b6090939091019283015250609601919050565b60006020828403121561135d57600080fd5b5051919050565b60008351611376818460208801611091565b83519083019061138a818360208801611091565b01949350505050565b72226e616d65223a22546865204879647261202360681b815281516000906113c2816013850160208701611091565b61088b60f21b6013939091019283015250601501919050565b7f226465736372697074696f6e223a22416e20616c7465726564207265616c697481527f79206578697374696e6720666f7265766572206f6e207468652045746865726560208201527f756d20626c6f636b636861696e2e20546869732065646974696f6e206973206160408201527f2066756c6c79206f6e2d636861696e205356472076657273696f6e206f6620546060820152696865204879647261202360b01b60808201526000825161149881608a850160208701611091565b7f2e2035302065646974696f6e7320657869737420666f722065616368206f7269608a9390910192830152507f67696e616c2070686f746f2e204561636820746f6b656e20636f6e666f726d7360aa8201527f20746f20746865204552432d373231207374616e646172642e0000000000000060ca82015261088b60f21b60e382015260e501919050565b681134b6b0b3b2911d1160b91b81528151600090611548816009850160208701611091565b61088b60f21b6009939091019283015250600b01919050565b7f2265787465726e616c5f75726c223a2268747470733a2f2f616c74657265642d81527365617274682e78797a2f7468652d68796472612f60601b6020820152600082516115b6816034850160208701611091565b61088b60f21b6034939091019283015250603601919050565b6d2261747472696275746573223a5b60901b81527f7b2274726169745f74797065223a2245646974696f6e222c2276616c7565223a600e820152601160f91b602e820152825160009061162981602f850160208801611091565b6301037b3160e51b602f91840191820152835161164d816033840160208801611091565b62089f4b60ea1b910160338101919091527f7b2274726169745f74797065223a2253697a65222c2276616c7565223a2236346036820152671e0d8d1c1e089f4b60c21b60568201527f7b2274726169745f74797065223a22436f6c6f7273222c2276616c7565223a22605e82015264323536227d60d81b607e820152605d60f81b60838201526084810195945050505050565b607b60f81b81526000600187516116fd8183860160208c01611091565b8751908401906117138184840160208c01611091565b87519101906117288184840160208b01611091565b865191019061173d8184840160208a01611091565b85519101906117528184840160208901611091565b607d60f81b910191820152600201979650505050505050565b634e487b7160e01b600052601160045260246000fd5b6000600182016117935761179361176b565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826117bf576117bf61179a565b500490565b6000828210156117d6576117d661176b565b500390565b6000826117ea576117ea61179a565b500690565b600082198211156118025761180261176b565b500190565b634e487b7160e01b600052603260045260246000fd5b60008160001904831182151516156118375761183761176b565b50029056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa164736f6c634300080d000a";

type TheHydraRendererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TheHydraRendererConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TheHydraRenderer__factory extends ContractFactory {
  constructor(...args: TheHydraRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    _theHydra: PromiseOrValue<string>,
    _theHydraDataStore: PromiseOrValue<string>,
    _xqstgfx: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TheHydraRenderer> {
    return super.deploy(
      _owner,
      _theHydra,
      _theHydraDataStore,
      _xqstgfx,
      overrides || {}
    ) as Promise<TheHydraRenderer>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    _theHydra: PromiseOrValue<string>,
    _theHydraDataStore: PromiseOrValue<string>,
    _xqstgfx: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _theHydra,
      _theHydraDataStore,
      _xqstgfx,
      overrides || {}
    );
  }
  override attach(address: string): TheHydraRenderer {
    return super.attach(address) as TheHydraRenderer;
  }
  override connect(signer: Signer): TheHydraRenderer__factory {
    return super.connect(signer) as TheHydraRenderer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TheHydraRendererInterface {
    return new utils.Interface(_abi) as TheHydraRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TheHydraRenderer {
    return new Contract(address, _abi, signerOrProvider) as TheHydraRenderer;
  }
}
